apply from: 'lib.gradle'

buildscript {
    repositories {
//        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
//            maven { url "http://172.30.162.1/nexus/content/groups/public" }
//        }
        mavenCentral()        
        jcenter()
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    group = 'io.microconfig'
    version = rootProject.version

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {        
//        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
//            maven { url "http://172.30.162.1/nexus/content/groups/public" }
//        }
        mavenCentral()
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        publications {
            nexus(MavenPublication) {
                pom {
                    name = 'MicroConfig'
                    description = 'Powerful tool for microservice configuration management'
                    url = 'https://microconfig.io/'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/microconfig/microconfig.git'
                        developerConnection = 'scm:git:https://github.com/microconfig/microconfig.git'
                        url = 'https://microconfig.io'
                    }
                    developers {
                        developer {
                            id = 'amatorin'
                            name = 'Alexander Matorin'
                            email = 'alx.matorin@gmail.com'
                        }
                        developer {
                            id = 'esladkovski'
                            name = 'Evgeni Sladkovski'
                            email = 'kapodes@gmail.com'
                        }
                        developer {
                            id = 'apavlov'
                            name = 'Artem Pavlov'
                            email = 'admpavlov@yandex.ru'
                        }
                    }
                }
                from components.java
            }
        }
        repositories {
            maven {
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.nexus
    }

    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:2.2.5.RELEASE")

        compileOnly lib.lombok
        annotationProcessor lib.lombok

        testImplementation 'org.junit.jupiter:junit-jupiter-engine',
                'org.mockito:mockito-junit-jupiter'
    }

    test {
        useJUnitPlatform()
        exclude '**/*IT.class'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
        xml.setDestination(file("${buildDir}/reports/jacoco/report.xml"))
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}