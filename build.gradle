apply from: 'lib.gradle'

buildscript {
    repositories {
//        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
//            maven { url "http://172.30.162.1/nexus/content/groups/public" }
//        }
        mavenCentral()        
        jcenter()
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    
    group = 'io.microconfig'
    version = rootProject.version

    sourceCompatibility = 11
    targetCompatibility = 11

    repositories {        
//        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
//            maven { url "http://172.30.162.1/nexus/content/groups/public" }
//        }
        mavenCentral()
    }

    publishing {
        publications {
            nexus(MavenPublication) {
                from components.java
            }
        }
    }

    dependencies {
        compileOnly lib.lombok
        testCompileOnly lib.lombok
        annotationProcessor lib.lombok

        testImplementation lib.junit, lib.mokito
    }

    test {
        useJUnitPlatform()
        exclude '**/*IT.class'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
        xml.setDestination(file("${buildDir}/reports/jacoco/report.xml"))
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}