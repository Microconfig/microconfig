name: "Build Native Binary"

on:
  push:
    branch: [native-binary]

jobs:
  build:
    runs-on: ubuntu-latest
    name: "Build Jar"
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build Jar
        run: ./gradlew shadowJar
      - name: Rename Jar
        shell: bash
        run: mv microconfig-cli/build/libs/microconfig-cli-*-all.jar microconfig-cli/build/libs/microconfig.jar
      - uses: actions/upload-artifact@v2
        with:
          name: microconfig.jar
          path: microconfig-cli/build/libs/microconfig.jar

  linux:
    name: "Build Linux"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Download Jar
        uses: actions/download-artifact@v2
        with:
          name: microconfig.jar
      - name: Install GraalVM Native Image
        shell: bash
        run: .github/scripts/native/graalvm-linux.sh
      - name: Build Binary
        shell: bash
        run: .github/scripts/native/native.sh
      - uses: actions/upload-artifact@v2
        with:
          name: microconfig-linux
          path: ./microconfig

#  windows:
#    name: "Build Windows"
#    needs: build
#    runs-on: windows-2016
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#      - name: Download Jar
#        uses: actions/download-artifact@v2
#        with:
#          name: microconfig.jar
#      - name: Install GraalVM Native Image
#        shell: bash
#        run: .github/scripts/native/graalvm-win.sh
#      - name: Build Binary
#        shell: bash
#        run: .github/scripts/native/native.bat
#      - uses: actions/upload-artifact@v2
#        with:
#          name: microconfig-windows
#          path: microconfig.exe
#
#  macos:
#    name: "Build MacOS"
#    needs: build
#    runs-on: macos-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#      - name: Download Jar
#        uses: actions/download-artifact@v2
#        with:
#          name: microconfig.jar
#      - name: Install GraalVM Native Image
#        shell: bash
#        run: .github/scripts/native/graalvm-mac.sh
#      - name: Build Binary
#        shell: bash
#        run: .github/scripts/native/native.sh
#      - uses: actions/upload-artifact@v2
#        with:
#          name: microconfig-macos
#          path: ./microconfig

  release:
    name: "Create release"
#    needs: [linux, macos, windows]
    needs: [linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: Tag name
          release_name: Release name
          draft: true
          prerelease: false

#      - name: Download Jar
#        uses: actions/download-artifact@v2
#        with:
#          name: microconfig.jar

      - name: Download Linux Binary
        uses: actions/download-artifact@v2
        with:
          name: microconfig-linux

      - name: Zip Linux Binary
        shell: bash
        run: zip -m microconfig-linux.zip microconfig

      - name: Upload Linux Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: microconfig-linux.zip
          asset_name: microconfig-linux.zip
          asset_content_type: application/zip